name: push image on ECR
on:
  # pull_request:
  #   types: [closed]
  push:
    branches:
    - feature/img_index
env:
  REGISTRY: 107106591751.dkr.ecr.us-east-1.amazonaws.com
  REGISTRY_NAME: newyorkmets
  IMAGE_NAME: newyorkmets
  IMAGE_TAG: 1.0.${{ github.run_number }}
jobs:
  image_on_registry:
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Chechout this repo
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::107106591751:role/github.to.aws.oicd
          aws-region: us-east-1
          audience: sts.amazonaws.com
      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
      - name: DockerImage to ECR
       #aws ecr get-login-password --region us-east-1 | docker login 107106591751.dkr.ecr.us-east-1.amazonaws.com -u AWS --password-stdin
        # run: |
        #    docker build -t ${{ env.IMAGE_NAME }} --no-cache=true .
        #    docker tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        #    docker images
        #    docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        # docker buildx build -t ${{ env.REGISTRY }}/${{ env.REGISTRY_NAME}}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
        # docker push ${{ env.REGISTRY }}/${{ env.REGISTRY_NAME}}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        run:
          docker build -t ${{ env.IMAGE_NAME }} --no-cache=true .

  
