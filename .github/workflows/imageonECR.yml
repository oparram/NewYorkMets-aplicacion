name: push image on ECR
on:
  # pull_request:
  #   types: [closed]
  push:
    branches:
    - feature/img_index
env:
  #REGISTRY: 107106591751.dkr.ecr.us-east-1.amazonaws.com
  REGISTRY: public.ecr.aws/w4v0m6b5
  IMAGE_NAME: newyorkmetsprueba3
  #IMAGE_NAME: newyorkmetsprueba2
  IMAGE_TAG: 1.0.${{ github.run_number }}
jobs:
  image_on_registry:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Chechout this repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::107106591751:role/github.to.aws.oicd
          aws-region: us-east-1

      - name: checkout to this repo
        uses: actions/checkout@v4
      - name: Deploy index to s3
        run: |
          ls
          aws s3 cp proyect/ s3://newyorkmets-bucket2/ --recursive
 
      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
          #aws ecr get-login-password --region us-east-1 | docker login ${{ env.REGISTRY }} -u AWS --password-stdin
      - name: DockerImage to ECR
        run: |
          docker build -t ${{ env.IMAGE_NAME }} --no-cache=true .
          docker tag ${{ env.IMAGE_NAME }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker images
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          echo "::set-output name=image::public.ecr.aws/w4v0m6b5/newyorkmetsprueba3:${{ env.IMAGE_TAG }}"

  deploy:
    name: Despliegue a ECS
    runs-on: ubuntu-latest
    needs: image_on_registry
    permissions:
      id-token: write
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::107106591751:role/github.to.aws.oicd
          aws-region: us-east-1 
      
      - name: Actualizar version ECS
        run: |
          aws ecs update-service --cluster Cluster-Proyecto --service My-ecs-service --task-definition Task-NewYorkMets-1 --force-new-deployment





  
